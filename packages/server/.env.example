# =================================================================
# WallGame Server Environment Configuration
# =================================================================
# Copy this file to .env.local and update with your actual values
# NEVER commit .env.local to version control!

# Server Configuration
PORT=3001
CLIENT_URL=http://localhost:3000
NODE_ENV=development

# Database Configuration
# Update these with your PostgreSQL credentials
DATABASE_URL=postgresql://wallgame_user:your_password_here@localhost:5432/wallgame
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=wallgame
POSTGRES_USER=wallgame_user
POSTGRES_PASSWORD=your_password_here

# Redis Configuration
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379

# Authentication Configuration
# Generate a strong secret key for production!
JWT_SECRET=your_super_secure_jwt_secret_key_here

# Test User Credentials (for automated testing)
TEST_USERNAME=your_test_username
TEST_PASSWORD=your_test_password

# Game Configuration
MAX_PLAYERS_PER_GAME=100
GRID_SIZE=2000
RESOURCE_GENERATION_RATE=1

# Development Flags
FORCE_DB=true

# Logging
LOG_LEVEL=debug

# =================================================================
# Quick Setup Commands:
# =================================================================
# 1. Install PostgreSQL and create 'wallgame' database
# 2. Install Redis or run: docker run -d -p 6379:6379 redis:latest
# 3. Copy this file: cp .env.example .env.local
# 4. Update .env.local with your actual credentials
# 5. Run: npm run dev
# =================================================================
